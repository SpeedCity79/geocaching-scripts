:- use_module(library(clpfd)).
 
sudoku(Rows) :- 
  append(Rows, Vs), Vs ins 1..9,
  maplist(all_distinct, Rows),
  transpose(Rows, Columns),     
  maplist(all_distinct, Columns), 
  Rows = [A,B,C,D,E,F,G,H,I],     
  blocks(A, B, C), 
  blocks(D, E, F), 
  blocks(G, H, I),     
  maplist(label, Rows).
 
blocks([], [], []).       
blocks([A,B,C|Bs1], [D,E,F|Bs2], [G,H,I|Bs3]) :-     
  all_distinct([A,B,C,D,E,F,G,H,I]),      
  blocks(Bs1, Bs2, Bs3).

problem(1,
           [[3,_,6,9,_,_,1,_,_],
            [_,5,1,_,_,_,_,6,_],
            [_,_,_,_,_,7,_,2,_],
            [_,_,_,8,_,_,_,_,9],
            [_,8,_,_,5,_,_,4,_],
            [4,_,_,_,_,1,_,_,_],
            [_,2,_,6,_,_,_,_,_],
            [_,4,_,_,_,_,5,1,_],
            [_,_,8,_,_,9,7,_,2]]).

% load/consult this file in prolog, then in interactive window, run:
%     problem(1, Rows), sudoku(Rows), maplist(writeln,Rows).
